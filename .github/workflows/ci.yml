name: Build with Gradle

on:
  pull_request:
    types: [ opened, synchronize ]
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GIT_ACCESS_TOKEN }}
        submodules: recursive
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v3
    - name: Cache SonarQube packages
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache Gradle packages
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle
    - name: Build and analyze
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      run: ./gradlew build sonar --info
    - name: SonarQube quality gate check
      uses: phwt/sonarqube-quality-gate-action@v1
      id: quality-gate-check
      with:
        sonar-project-key: ${{ secrets.SONAR_PROJECT_KEY }}
        sonar-host-url: ${{ secrets.SONAR_HOST_URL }}
        sonar-token: ${{ secrets.SONAR_TOKEN }}
        github-token: ${{ secrets.GIT_ACCESS_TOKEN }}
    - name: Output sonar result
      run: |
        echo "${{ steps.quality-gate-check.outputs.project-status }}"
        echo "${{ steps.quality-gate-check.outputs.quality-gate-result }}"
